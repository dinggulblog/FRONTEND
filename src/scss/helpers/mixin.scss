@use 'sass:color';

$primary: #9496e1;
$primaryLight: color.scale($primary, $lightness: 15%);
$primaryDark: color.scale($primary, $lightness: -15%);

@mixin ellipsis($lines: 1) {
  @if ($lines==1) {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
  }
}

@mixin placeholder($color) {
  &::placeholder {
    color: var(--#{$color});
  }
}

@mixin circle($w: 0, $h: 0) {
  width: #{$w}rem;
  height: #{$h}rem;
  border-radius: 50%;
}

@mixin hover($color: $primary) {
  @media (hover: hover) and (pointer: fine) {
    &:hover {
      color: $primaryLight;
      @content;
    }
  }
}

@mixin active($color: $primary) {
  &:active {
    color: $primaryDark;
    @content;
  }
}

@mixin hover-bg($color: $primary) {
  @media (hover: hover) and (pointer: fine) {
    &:hover {
      background: $primaryLight;
    }
  }
}

@mixin active-bg($color: $primary) {
  &:active {
    background: $primaryDark;
  }
}

@mixin position($p: relative, $t: null, $b: null, $l: null, $r: null, $z: null) {
  position: $p;
  top: $t;
  bottom: $b;
  left: $l;
  right: $r;
  z-index: $z;
}

$flexMap: (
  start: flex-start,
  end: flex-end,
  between: space-between,
  around: space-around,
  stretch: stretch,
  center: center,
  initial: initial,
);

@function getFlex($key) {
  @return map-get($flexMap, $key);
}

@mixin flex($fd: row, $jc: null, $ai: null) {
  display: flex;

  @if ($fd!=row) {
    flex-direction: $fd;
  }

  @if ($jc!=null) {
    justify-content: getFlex($jc);
  }

  @if ($ai!=null) {
    align-items: getFlex($ai);
  } @else {
    align-items: center;
  }
}

@mixin flex-right {
  display: flex;
  justify-content: flex-end;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-col-center {
  display: flex;
  flex-direction: column;
  align-items: center;
}
